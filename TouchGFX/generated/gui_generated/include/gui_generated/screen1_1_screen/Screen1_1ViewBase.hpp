/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1_1VIEWBASE_HPP
#define SCREEN1_1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_1_screen/Screen1_1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndOverwrite.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Screen1_1ViewBase : public touchgfx::View<Screen1_1Presenter>
{
public:
    Screen1_1ViewBase();
    virtual ~Screen1_1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScrollableContainer scrollableContainer1;
    touchgfx::ScrollableContainer scrollableContainer1_1;
    touchgfx::ScalableImage scalableImage1_1;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::ScalableImage scalableImage2_1;
    touchgfx::ScalableImage scalableImage3;
    touchgfx::GraphWrapAndOverwrite<100> dynamicGraph1;
    touchgfx::GraphElementGridX dynamicGraph1MajorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph1MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph1MajorXAxisLabel;
    touchgfx::GraphLabelsY dynamicGraph1MajorYAxisLabel;
    touchgfx::GraphElementLine dynamicGraph1Line3;
    touchgfx::PainterRGB888 dynamicGraph1Line3Painter;
    touchgfx::GraphElementLine dynamicGraph1Line2;
    touchgfx::PainterRGB888 dynamicGraph1Line2Painter;
    touchgfx::GraphElementLine dynamicGraph1Line1;
    touchgfx::PainterRGB888 dynamicGraph1Line1Painter;
    touchgfx::ButtonWithLabel buttonWithLabel1;
    touchgfx::ButtonWithLabel buttonWithLabel1_1;
    touchgfx::ButtonWithLabel overVoltageProtection;
    touchgfx::ButtonWithLabel overCurrentProtection;
    touchgfx::ButtonWithLabel setCurrent;
    touchgfx::ButtonWithIcon buttonWithIcon1;
    touchgfx::ButtonWithIcon buttonWithIcon1_1;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextAreaWithOneWildcard textArea1_2;
    touchgfx::TextAreaWithOneWildcard textArea1_2_1;
    touchgfx::TextAreaWithOneWildcard textArea1_2_1_2;
    touchgfx::TextAreaWithOneWildcard textArea1_2_1_2_1;
    touchgfx::TextAreaWithOneWildcard textArea1_2_1_2_2;
    touchgfx::TextAreaWithOneWildcard textArea1_1;
    touchgfx::TextAreaWithOneWildcard textArea1_1_1;
    touchgfx::FadeAnimator< touchgfx::TextArea > textArea2;
    touchgfx::FadeAnimator< touchgfx::TextArea > textArea2_1;
    touchgfx::TextAreaWithOneWildcard textArea1_2_1_1;
    touchgfx::FadeAnimator< touchgfx::TextArea > textArea2_1_1;
    touchgfx::TextAreaWithOneWildcard textArea1_2_1_1_1;
    touchgfx::FadeAnimator< touchgfx::TextArea > textArea2_1_1_1;
    touchgfx::TextAreaWithOneWildcard textArea1_2_1_1_1_1;
    touchgfx::FadeAnimator< touchgfx::TextArea > textArea2_1_1_1_1;
    touchgfx::ToggleButton darkMode;
    touchgfx::Image image1;
    touchgfx::Image image1_1;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ToggleButtonTrigger >  >  toggleSetVoltage;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t TEXTAREA1_2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2Buffer[TEXTAREA1_2_SIZE];
    static const uint16_t TEXTAREA1_2_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2_1Buffer[TEXTAREA1_2_1_SIZE];
    static const uint16_t TEXTAREA1_2_1_2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2_1_2Buffer[TEXTAREA1_2_1_2_SIZE];
    static const uint16_t TEXTAREA1_2_1_2_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2_1_2_1Buffer[TEXTAREA1_2_1_2_1_SIZE];
    static const uint16_t TEXTAREA1_2_1_2_2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2_1_2_2Buffer[TEXTAREA1_2_1_2_2_SIZE];
    static const uint16_t TEXTAREA1_1_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textArea1_1Buffer[TEXTAREA1_1_SIZE];
    static const uint16_t TEXTAREA1_1_1_SIZE = 100;
    touchgfx::Unicode::UnicodeChar textArea1_1_1Buffer[TEXTAREA1_1_1_SIZE];
    static const uint16_t TEXTAREA1_2_1_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2_1_1Buffer[TEXTAREA1_2_1_1_SIZE];
    static const uint16_t TEXTAREA1_2_1_1_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2_1_1_1Buffer[TEXTAREA1_2_1_1_1_SIZE];
    static const uint16_t TEXTAREA1_2_1_1_1_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2_1_1_1_1Buffer[TEXTAREA1_2_1_1_1_1_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1_1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN1_1VIEWBASE_HPP
