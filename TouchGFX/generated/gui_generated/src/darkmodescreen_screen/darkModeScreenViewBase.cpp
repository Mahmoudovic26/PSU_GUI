/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/darkmodescreen_screen/darkModeScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

darkModeScreenViewBase::darkModeScreenViewBase() :
    flexButtonCallback(this, &darkModeScreenViewBase::flexButtonCallbackHandler),
    graphClickedCallback(this, &darkModeScreenViewBase::graphClickedCallbackHandler),
    buttonCallback(this, &darkModeScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    valuesContainer.setPosition(0, 80, 400, 333);
    valuesContainer.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    valuesContainer.setScrollbarsAlpha(255);
    add(valuesContainer);

    graphContainer.setPosition(400, 20, 400, 393);
    graphContainer.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    graphContainer.setScrollbarsAlpha(255);
    add(graphContainer);

    valuesBackground.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_MEDIUM_NARROW_DARK_ID));
    valuesBackground.setPosition(0, 20, 400, 420);
    valuesBackground.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(valuesBackground);

    graphBackground.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_LARGE_WIDE_DARK_ID));
    graphBackground.setPosition(400, 20, 400, 420);
    graphBackground.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(graphBackground);

    inputBorder.setPosition(199, 56, 231, 166);
    inputBorder.setColor(touchgfx::Color::getColorFromRGB(23, 28, 54));
    inputBorder.setBorderColor(touchgfx::Color::getColorFromRGB(45, 58, 75));
    inputBorder.setBorderSize(5);
    add(inputBorder);

    setpointBorder.setPosition(199, 187, 233, 116);
    setpointBorder.setColor(touchgfx::Color::getColorFromRGB(20, 24, 48));
    setpointBorder.setBorderColor(touchgfx::Color::getColorFromRGB(45, 58, 75));
    setpointBorder.setBorderSize(5);
    add(setpointBorder);

    protectionBorder.setPosition(198, 285, 232, 110);
    protectionBorder.setColor(touchgfx::Color::getColorFromRGB(20, 24, 48));
    protectionBorder.setBorderColor(touchgfx::Color::getColorFromRGB(45, 58, 75));
    protectionBorder.setBorderSize(5);
    add(protectionBorder);

    outputBorder.setPosition(0, 56, 225, 339);
    outputBorder.setColor(touchgfx::Color::getColorFromRGB(23, 28, 54));
    outputBorder.setBorderColor(touchgfx::Color::getColorFromRGB(45, 58, 75));
    outputBorder.setBorderSize(5);
    add(outputBorder);

    header.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_SMALL_NARROW_DARK_ID));
    header.setPosition(0, -6, 800, 55);
    header.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(header);

    footer.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_LARGE_WIDE_DARK_ID));
    footer.setPosition(0, 400, 800, 80);
    footer.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(footer);

    powerGraph.setPosition(430, 56, 370, 339);
    powerGraph.setScale(1000);
    powerGraph.setGraphRangeX(0, 25);
    powerGraph.setXAxisFactor(25);
    powerGraph.setXAxisOffset(0);
    powerGraph.setGraphAreaMargin(0, 0, 0, 0);
    powerGraph.setGraphAreaPadding(0, 0, 0, 0);
    powerGraph.setGraphRangeY(0, 100);
    powerGraph.setClickAction(graphClickedCallback);
    powerGraphMajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(168, 176, 178));
    powerGraphMajorXAxisGrid.setInterval(2);
    powerGraphMajorXAxisGrid.setLineWidth(1);
    powerGraphMajorXAxisGrid.setScale(1000);
    powerGraph.addGraphElement(powerGraphMajorXAxisGrid);

    powerGraphMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(157, 162, 163));
    powerGraphMajorYAxisGrid.setInterval(10);
    powerGraphMajorYAxisGrid.setLineWidth(1);
    powerGraphMajorYAxisGrid.setScale(1000);
    powerGraph.addGraphElement(powerGraphMajorYAxisGrid);

    powerGraphMajorXAxisLabel.setInterval(10);
    powerGraphMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_0AZ9));
    powerGraphMajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(153, 161, 163));
    powerGraphMajorXAxisLabel.setScale(1000);
    powerGraph.addBottomElement(powerGraphMajorXAxisLabel);

    powerGraphMajorYAxisLabel.setInterval(10);
    powerGraphMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_946F));
    powerGraphMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(93, 94, 94));
    powerGraphMajorYAxisLabel.setScale(1000);
    powerGraph.addLeftElement(powerGraphMajorYAxisLabel);

    powerGraphLine3Painter.setColor(touchgfx::Color::getColorFromRGB(0, 188, 212));
    powerGraphLine3.setPainter(powerGraphLine3Painter);
    powerGraphLine3.setLineWidth(2);
    powerGraph.addGraphElement(powerGraphLine3);

    powerGraphLine2Painter.setColor(touchgfx::Color::getColorFromRGB(84, 227, 79));
    powerGraphLine2.setPainter(powerGraphLine2Painter);
    powerGraphLine2.setLineWidth(2);
    powerGraph.addGraphElement(powerGraphLine2);

    powerGraphLine1Painter.setColor(touchgfx::Color::getColorFromRGB(166, 72, 224));
    powerGraphLine1.setPainter(powerGraphLine1Painter);
    powerGraphLine1.setLineWidth(4);
    powerGraph.addGraphElement(powerGraphLine1);


    powerGraph.addDataPoint(8.78007f);
    powerGraph.addDataPoint(1.89552f);
    powerGraph.addDataPoint(2.00703f);
    powerGraph.addDataPoint(8.81661f);
    powerGraph.addDataPoint(20.58779f);
    powerGraph.addDataPoint(34.57349f);
    powerGraph.addDataPoint(47.68323f);
    powerGraph.addDataPoint(57.22652f);
    powerGraph.addDataPoint(61.55083f);
    powerGraph.addDataPoint(60.41896f);
    powerGraph.addDataPoint(55.03436f);
    powerGraph.addDataPoint(47.70951f);
    powerGraph.addDataPoint(41.26017f);
    powerGraph.addDataPoint(38.27519f);
    powerGraph.addDataPoint(40.44241f);
    powerGraph.addDataPoint(48.0973f);
    powerGraph.addDataPoint(60.10624f);
    powerGraph.addDataPoint(74.11458f);
    powerGraph.addDataPoint(87.09982f);
    powerGraph.addDataPoint(96.09532f);
    powerGraph.addDataPoint(98.90824f);
    powerGraph.addDataPoint(94.65599f);
    powerGraph.addDataPoint(83.99004f);
    powerGraph.addDataPoint(68.95202f);
    powerGraph.addDataPoint(52.49648f);
    powerGraph.addDataPoint(37.79659f);
    powerGraph.addDataPoint(27.50129f);
    powerGraph.addDataPoint(23.12465f);
    powerGraph.addDataPoint(24.7153f);
    powerGraph.addDataPoint(30.88528f);
    powerGraph.addDataPoint(39.18971f);
    powerGraph.addDataPoint(46.76258f);
    powerGraph.addDataPoint(51.05168f);
    powerGraph.addDataPoint(50.4713f);
    powerGraph.addDataPoint(44.81181f);
    powerGraph.addDataPoint(35.30502f);
    powerGraph.addDataPoint(24.3287f);
    powerGraph.addDataPoint(14.82243f);
    powerGraph.addDataPoint(9.55786f);
    powerGraph.addDataPoint(10.44236f);
    powerGraph.addDataPoint(18.0274f);
    powerGraph.addDataPoint(31.34292f);
    powerGraph.addDataPoint(48.09945f);
    powerGraph.addDataPoint(65.20996f);
    powerGraph.addDataPoint(79.50521f);
    powerGraph.addDataPoint(88.469f);
    powerGraph.addDataPoint(90.81501f);
    powerGraph.addDataPoint(86.76552f);
    powerGraph.addDataPoint(77.96524f);
    powerGraph.addDataPoint(67.05259f);
    powerGraph.addDataPoint(56.99439f);
    powerGraph.addDataPoint(50.34778f);
    powerGraph.addDataPoint(48.63033f);
    powerGraph.addDataPoint(51.95288f);
    powerGraph.addDataPoint(59.00473f);
    powerGraph.addDataPoint(67.3944f);
    powerGraph.addDataPoint(74.26163f);
    powerGraph.addDataPoint(77.0098f);
    powerGraph.addDataPoint(73.97821f);
    powerGraph.addDataPoint(64.88801f);
    powerGraph.addDataPoint(50.95121f);
    powerGraph.addDataPoint(34.61433f);
    powerGraph.addDataPoint(18.99792f);
    powerGraph.addDataPoint(7.16758f);
    powerGraph.addDataPoint(1.41361f);
    powerGraph.addDataPoint(2.71446f);
    powerGraph.addDataPoint(10.51427f);
    powerGraph.addDataPoint(22.86848f);
    powerGraph.addDataPoint(36.92129f);
    powerGraph.addDataPoint(49.59814f);
    powerGraph.addDataPoint(58.34384f);
    powerGraph.addDataPoint(61.72636f);
    powerGraph.addDataPoint(59.75912f);
    powerGraph.addDataPoint(53.86416f);
    powerGraph.addDataPoint(46.48651f);
    powerGraph.addDataPoint(40.45559f);
    powerGraph.addDataPoint(38.2517f);
    powerGraph.addDataPoint(41.35875f);
    powerGraph.addDataPoint(49.86328f);
    powerGraph.addDataPoint(62.39951f);
    powerGraph.addDataPoint(76.45516f);
    powerGraph.addDataPoint(88.96433f);
    powerGraph.addDataPoint(97.04319f);
    powerGraph.addDataPoint(98.68892f);
    powerGraph.addDataPoint(93.27101f);
    powerGraph.addDataPoint(81.69476f);
    powerGraph.addDataPoint(66.19641f);
    powerGraph.addDataPoint(49.81944f);
    powerGraph.addDataPoint(35.6994f);
    powerGraph.addDataPoint(26.33103f);
    powerGraph.addDataPoint(22.99588f);
    powerGraph.addDataPoint(25.48884f);
    powerGraph.addDataPoint(32.2091f);
    powerGraph.addDataPoint(40.59159f);
    powerGraph.addDataPoint(47.77166f);
    powerGraph.addDataPoint(51.31882f);
    powerGraph.addDataPoint(49.85861f);
    powerGraph.addDataPoint(43.42933f);
    powerGraph.addDataPoint(33.48534f);
    powerGraph.addDataPoint(22.5458f);
    add(powerGraph);

    overVoltageProtectionButton.setXY(352, 423);
    overVoltageProtectionButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_DISABLED_ID));
    overVoltageProtectionButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_R5H9));
    overVoltageProtectionButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 250, 250));
    overVoltageProtectionButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    overVoltageProtectionButton.setAction(buttonCallback);
    add(overVoltageProtectionButton);

    overCurrentProtectionButton.setXY(529, 423);
    overCurrentProtectionButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_DISABLED_ID));
    overCurrentProtectionButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RSAU));
    overCurrentProtectionButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 250, 250));
    overCurrentProtectionButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    overCurrentProtectionButton.setAction(buttonCallback);
    add(overCurrentProtectionButton);

    outVoltage.setPosition(-1, 80, 231, 68);
    outVoltage.setColor(touchgfx::Color::getColorFromRGB(0, 150, 136));
    outVoltage.setLinespacing(0);
    Unicode::snprintf(outVoltageBuffer, OUTVOLTAGE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XOIK).getText());
    outVoltage.setWildcard(outVoltageBuffer);
    outVoltage.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3ZBU));
    add(outVoltage);

    outCurrent.setPosition(-2, 147, 225, 69);
    outCurrent.setColor(touchgfx::Color::getColorFromRGB(205, 220, 57));
    outCurrent.setLinespacing(0);
    Unicode::snprintf(outCurrentBuffer, OUTCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9K3B).getText());
    outCurrent.setWildcard(outCurrentBuffer);
    outCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_521A));
    add(outCurrent);

    powerWatt.setPosition(-2, 222, 225, 73);
    powerWatt.setColor(touchgfx::Color::getColorFromRGB(76, 175, 80));
    powerWatt.setLinespacing(0);
    Unicode::snprintf(powerWattBuffer, POWERWATT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OH3U).getText());
    powerWatt.setWildcard(powerWattBuffer);
    powerWatt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DZU7));
    add(powerWatt);

    powerAH.setXY(3, 285);
    powerAH.setColor(touchgfx::Color::getColorFromRGB(139, 195, 74));
    powerAH.setLinespacing(0);
    Unicode::snprintf(powerAHBuffer, POWERAH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XXG2).getText());
    powerAH.setWildcard(powerAHBuffer);
    powerAH.resizeToCurrentText();
    powerAH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PBKS));
    add(powerAH);

    powerWH.setXY(3, 339);
    powerWH.setColor(touchgfx::Color::getColorFromRGB(139, 195, 74));
    powerWH.setLinespacing(0);
    Unicode::snprintf(powerWHBuffer, POWERWH_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WAZ3).getText());
    powerWH.setWildcard(powerWHBuffer);
    powerWH.resizeToCurrentText();
    powerWH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4B72));
    add(powerWH);

    inputVoltageValue.setXY(299, 72);
    inputVoltageValue.setColor(touchgfx::Color::getColorFromRGB(0, 150, 135));
    inputVoltageValue.setLinespacing(0);
    Unicode::snprintf(inputVoltageValueBuffer, INPUTVOLTAGEVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7W2R).getText());
    inputVoltageValue.setWildcard(inputVoltageValueBuffer);
    inputVoltageValue.resizeToCurrentText();
    inputVoltageValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CSUH));
    add(inputVoltageValue);

    inputVoltage.setXY(232, 80);
    inputVoltage.setColor(touchgfx::Color::getColorFromRGB(0, 150, 136));
    inputVoltage.setLinespacing(0);
    inputVoltage.setWideTextAction(WIDE_TEXT_WORDWRAP);
    inputVoltage.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PLC4));
    add(inputVoltage);

    vSetValue.setXY(311, 207);
    vSetValue.setColor(touchgfx::Color::getColorFromRGB(0, 150, 136));
    vSetValue.setLinespacing(0);
    Unicode::snprintf(vSetValueBuffer, VSETVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_754Z).getText());
    vSetValue.setWildcard(vSetValueBuffer);
    vSetValue.resizeToCurrentText();
    vSetValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S1FZ));
    add(vSetValue);

    vSet.setXY(234, 216);
    vSet.setColor(touchgfx::Color::getColorFromRGB(0, 150, 136));
    vSet.setLinespacing(0);
    vSet.setWideTextAction(WIDE_TEXT_WORDWRAP);
    vSet.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6ACG));
    add(vSet);

    iSetValue.setXY(329, 238);
    iSetValue.setColor(touchgfx::Color::getColorFromRGB(205, 220, 57));
    iSetValue.setLinespacing(0);
    Unicode::snprintf(iSetValueBuffer, ISETVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NS3I).getText());
    iSetValue.setWildcard(iSetValueBuffer);
    iSetValue.resizeToCurrentText();
    iSetValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0IZZ));
    add(iSetValue);

    iSet.setXY(234, 247);
    iSet.setColor(touchgfx::Color::getColorFromRGB(205, 220, 57));
    iSet.setLinespacing(0);
    iSet.setWideTextAction(WIDE_TEXT_WORDWRAP);
    iSet.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5J4H));
    add(iSet);

    ovpValue.setXY(297, 303);
    ovpValue.setColor(touchgfx::Color::getColorFromRGB(0, 150, 136));
    ovpValue.setLinespacing(0);
    Unicode::snprintf(ovpValueBuffer, OVPVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_MLIC).getText());
    ovpValue.setWildcard(ovpValueBuffer);
    ovpValue.resizeToCurrentText();
    ovpValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1VWM));
    add(ovpValue);

    ovp.setXY(234, 311);
    ovp.setColor(touchgfx::Color::getColorFromRGB(0, 150, 136));
    ovp.setLinespacing(0);
    ovp.setWideTextAction(WIDE_TEXT_WORDWRAP);
    ovp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6ZFI));
    add(ovp);

    ocpValue.setXY(292, 339);
    ocpValue.setColor(touchgfx::Color::getColorFromRGB(205, 220, 57));
    ocpValue.setLinespacing(0);
    Unicode::snprintf(ocpValueBuffer, OCPVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FNAA).getText());
    ocpValue.setWildcard(ocpValueBuffer);
    ocpValue.resizeToCurrentText();
    ocpValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LJYU));
    add(ocpValue);

    ocp.setXY(235, 349);
    ocp.setColor(touchgfx::Color::getColorFromRGB(205, 220, 57));
    ocp.setLinespacing(0);
    ocp.setWideTextAction(WIDE_TEXT_WORDWRAP);
    ocp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M9QB));
    add(ocp);

    ocpValue_1.setXY(289, 139);
    ocpValue_1.setColor(touchgfx::Color::getColorFromRGB(76, 175, 80));
    ocpValue_1.setLinespacing(0);
    Unicode::snprintf(ocpValue_1Buffer, OCPVALUE_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_L9YD).getText());
    ocpValue_1.setWildcard(ocpValue_1Buffer);
    ocpValue_1.resizeToCurrentText();
    ocpValue_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P3FV));
    add(ocpValue_1);

    ocp_1.setXY(230, 147);
    ocp_1.setColor(touchgfx::Color::getColorFromRGB(76, 175, 80));
    ocp_1.setLinespacing(0);
    ocp_1.setWideTextAction(WIDE_TEXT_WORDWRAP);
    ocp_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6FYS));
    add(ocp_1);

    ocpValue_1_1.setXY(329, 102);
    ocpValue_1_1.setColor(touchgfx::Color::getColorFromRGB(205, 220, 57));
    ocpValue_1_1.setLinespacing(0);
    Unicode::snprintf(ocpValue_1_1Buffer, OCPVALUE_1_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8H2T).getText());
    ocpValue_1_1.setWildcard(ocpValue_1_1Buffer);
    ocpValue_1_1.resizeToCurrentText();
    ocpValue_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MRIM));
    add(ocpValue_1_1);

    ocp_1_1.setXY(232, 110);
    ocp_1_1.setColor(touchgfx::Color::getColorFromRGB(205, 220, 57));
    ocp_1_1.setLinespacing(0);
    ocp_1_1.setWideTextAction(WIDE_TEXT_WORDWRAP);
    ocp_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZGTH));
    add(ocp_1_1);

    decreaseVoltage.setXY(142, 377);
    decreaseVoltage.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID));
    decreaseVoltage.setIconXY(25, -7);
    decreaseVoltage.setVisible(false);
    decreaseVoltage.setAction(buttonCallback);
    add(decreaseVoltage);

    increaseVoltage.setXY(300, 377);
    increaseVoltage.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID));
    increaseVoltage.setIconXY(25, -7);
    increaseVoltage.setVisible(false);
    increaseVoltage.setAction(buttonCallback);
    add(increaseVoltage);

    increaseCurrent.setXY(300, 377);
    increaseCurrent.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID));
    increaseCurrent.setIconXY(25, -7);
    increaseCurrent.setVisible(false);
    increaseCurrent.setAction(buttonCallback);
    add(increaseCurrent);

    decreaseCurrent.setXY(142, 377);
    decreaseCurrent.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID));
    decreaseCurrent.setIconXY(25, -7);
    decreaseCurrent.setVisible(false);
    decreaseCurrent.setAction(buttonCallback);
    add(decreaseCurrent);

    decreaseOVP.setXY(142, 377);
    decreaseOVP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID));
    decreaseOVP.setIconXY(25, -7);
    decreaseOVP.setVisible(false);
    decreaseOVP.setAction(buttonCallback);
    add(decreaseOVP);

    increaseOVP.setXY(300, 377);
    increaseOVP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID));
    increaseOVP.setIconXY(25, -7);
    increaseOVP.setVisible(false);
    increaseOVP.setAction(buttonCallback);
    add(increaseOVP);

    increaseOCP.setXY(300, 377);
    increaseOCP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID));
    increaseOCP.setIconXY(25, -7);
    increaseOCP.setVisible(false);
    increaseOCP.setAction(buttonCallback);
    add(increaseOCP);

    decreaseOCP.setXY(142, 377);
    decreaseOCP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID));
    decreaseOCP.setIconXY(25, -7);
    decreaseOCP.setVisible(false);
    decreaseOCP.setAction(buttonCallback);
    add(decreaseOCP);

    setVoltage.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_DISABLED_ID));
    setVoltage.setBitmapXY(-1, 10);
    setVoltage.setText(TypedText(T___SINGLEUSE_95A4));
    setVoltage.setTextPosition(-9, 20, 176, 65);
    setVoltage.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(184, 180, 180));
    setVoltage.setAction(flexButtonCallback);
    setVoltage.setPosition(0, 413, 176, 65);
    add(setVoltage);

    setCurrent.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_PRESSED_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUNDED_DISABLED_ID));
    setCurrent.setBitmapXY(-1, 10);
    setCurrent.setText(TypedText(T___SINGLEUSE_EKN6));
    setCurrent.setTextPosition(-12, 20, 183, 69);
    setCurrent.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(184, 180, 180));
    setCurrent.setAction(flexButtonCallback);
    setCurrent.setPosition(176, 413, 183, 69);
    add(setCurrent);

    tempToogle.setWildcardText(TypedText(T___SINGLEUSE_7HPE));
    tempToogle.setWildcardTextBuffer(TypedText(T_TEMP).getText());
    tempToogle.setWildcardTextPosition(-3, 0, 96, 50);
    tempToogle.setWildcardTextColors(touchgfx::Color::getColorFromRGB(244, 67, 54), touchgfx::Color::getColorFromRGB(245, 19, 2));
    tempToogle.setPosition(704, 428, 96, 50);
    add(tempToogle);

    textArea1.setXY(281, 56);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 193, 7));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJ1));
    add(textArea1);

    textArea1_2.setXY(57, 56);
    textArea1_2.setColor(touchgfx::Color::getColorFromRGB(255, 193, 7));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_URT6));
    add(textArea1_2);

    textArea1_1.setXY(277, 189);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 193, 7));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DH89));
    add(textArea1_1);

    textArea1_1_1.setXY(266, 285);
    textArea1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 193, 7));
    textArea1_1_1.setLinespacing(0);
    textArea1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J095));
    add(textArea1_1_1);

    textArea2.setXY(0, 0);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(147, 157, 230));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3A8D));
    add(textArea2);

    textArea3.setXY(478, 1);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(71, 185, 255));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XKEL));
    add(textArea3);
}

darkModeScreenViewBase::~darkModeScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void darkModeScreenViewBase::setupScreen()
{

}

void darkModeScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &setVoltage)
    {
        //showdecreaseVoltage
        //When setVoltage clicked show decreaseVoltage
        //Show decreaseVoltage
        decreaseVoltage.setVisible(true);
        decreaseVoltage.invalidate();
        //showIncreaseVoltage
        //When setVoltage clicked show increaseVoltage
        //Show increaseVoltage
        increaseVoltage.setVisible(true);
        increaseVoltage.invalidate();
        //disableDecreaseCurrent
        //When setVoltage clicked hide decreaseCurrent
        //Hide decreaseCurrent
        decreaseCurrent.setVisible(false);
        decreaseCurrent.invalidate();
        //disableIncreaseCurrent
        //When setVoltage clicked hide increaseCurrent
        //Hide increaseCurrent
        increaseCurrent.setVisible(false);
        increaseCurrent.invalidate();
    }
    if (&src == &setCurrent)
    {
        //showDecreaseCurrent
        //When setCurrent clicked show decreaseCurrent
        //Show decreaseCurrent
        decreaseCurrent.setVisible(true);
        decreaseCurrent.invalidate();
        //showIncreaseCurrent
        //When setCurrent clicked show increaseCurrent
        //Show increaseCurrent
        increaseCurrent.setVisible(true);
        increaseCurrent.invalidate();
        //disableIncreaseVoltage
        //When setCurrent clicked hide increaseVoltage
        //Hide increaseVoltage
        increaseVoltage.setVisible(false);
        increaseVoltage.invalidate();
        //disableDecreaseVoltage
        //When setCurrent clicked hide decreaseVoltage
        //Hide decreaseVoltage
        decreaseVoltage.setVisible(false);
        decreaseVoltage.invalidate();
    }
}

void darkModeScreenViewBase::graphClickedCallbackHandler(const touchgfx::AbstractDataGraph& src, const touchgfx::AbstractDataGraph::GraphClickEvent& value)
{
    if (&src == &powerGraph)
    {
        //hideIncreaseVoltage
        //When powerGraph clicked hide increaseVoltage
        //Hide increaseVoltage
        increaseVoltage.setVisible(false);
        increaseVoltage.invalidate();
        //hideDecreaseVoltage
        //When powerGraph clicked hide decreaseVoltage
        //Hide decreaseVoltage
        decreaseVoltage.setVisible(false);
        decreaseVoltage.invalidate();
        //hideDecreaseCurrent
        //When powerGraph clicked hide decreaseCurrent
        //Hide decreaseCurrent
        decreaseCurrent.setVisible(false);
        decreaseCurrent.invalidate();
        //hideIncreaseCurrent
        //When powerGraph clicked hide increaseCurrent
        //Hide increaseCurrent
        increaseCurrent.setVisible(false);
        increaseCurrent.invalidate();
        //hideDecreaseOCP
        //When powerGraph clicked hide decreaseOCP
        //Hide decreaseOCP
        decreaseOCP.setVisible(false);
        decreaseOCP.invalidate();
        //hideIncreaseOCP
        //When powerGraph clicked hide increaseOCP
        //Hide increaseOCP
        increaseOCP.setVisible(false);
        increaseOCP.invalidate();
        //hideDecreaseOVP
        //When powerGraph clicked hide decreaseOVP
        //Hide decreaseOVP
        decreaseOVP.setVisible(false);
        decreaseOVP.invalidate();
        //hideIncreaseOVP
        //When powerGraph clicked hide increaseOVP
        //Hide increaseOVP
        increaseOVP.setVisible(false);
        increaseOVP.invalidate();
    }
}

void darkModeScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &increaseVoltage)
    {
        //increaseSetVoltage
        //When increaseVoltage clicked call virtual function
        //Call increaseSetVoltage
        increaseSetVoltage();
    }
    if (&src == &decreaseVoltage)
    {
        //decreaseSetVoltage
        //When decreaseVoltage clicked call virtual function
        //Call decreaseSetVoltage
        decreaseSetVoltage();
    }
    if (&src == &increaseCurrent)
    {
        //increaseSetCurrent
        //When increaseCurrent clicked call virtual function
        //Call increaseSetCurrent
        increaseSetCurrent();
    }
    if (&src == &decreaseCurrent)
    {
        //decreaseSetCurrent
        //When decreaseCurrent clicked call virtual function
        //Call decreaseSetCurrent
        decreaseSetCurrent();
    }
    if (&src == &overVoltageProtectionButton)
    {
        //showIncreaseOVP
        //When overVoltageProtectionButton clicked show increaseOVP
        //Show increaseOVP
        increaseOVP.setVisible(true);
        increaseOVP.invalidate();
        //showDecreaseOVP
        //When overVoltageProtectionButton clicked show decreaseOVP
        //Show decreaseOVP
        decreaseOVP.setVisible(true);
        decreaseOVP.invalidate();
    }
    if (&src == &overCurrentProtectionButton)
    {
        //showIncreaseOCP
        //When overCurrentProtectionButton clicked show increaseOCP
        //Show increaseOCP
        increaseOCP.setVisible(true);
        increaseOCP.invalidate();
        //showDecreaseOCP
        //When overCurrentProtectionButton clicked show decreaseOCP
        //Show decreaseOCP
        decreaseOCP.setVisible(true);
        decreaseOCP.invalidate();
    }
    if (&src == &increaseOVP)
    {
        //increaseSetOVP
        //When increaseOVP clicked call virtual function
        //Call increaseSetOVP
        increaseSetOVP();
    }
    if (&src == &decreaseOVP)
    {
        //decreaseSetOVP
        //When decreaseOVP clicked call virtual function
        //Call decreaseSetOVP
        decreaseSetOVP();
    }
    if (&src == &increaseOCP)
    {
        //increaseSetOCP
        //When increaseOCP clicked call virtual function
        //Call increaseSetOCP
        increaseSetOCP();
    }
    if (&src == &decreaseOCP)
    {
        //decreaseSetOCP
        //When decreaseOCP clicked call virtual function
        //Call decreaseSetOCP
        decreaseSetOCP();
    }
}
